@model GBCSporting2021_TEC.Models.Incident

@{
    string currentAction = ViewContext.RouteData.Values["action"].ToString();
    ViewBag.Title = currentAction + " Incident";
}

<h2 class="my-3 my-md-4">@currentAction Incident</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    if (currentAction == "Edit"){
        @Html.HiddenFor(model => model.Id)
    }

    <div class="form-group">
        @Html.LabelFor(model => model.Title)

        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Customer, "Customer")

        @Html.DropDownList("Customer", null, "Select a customer", htmlAttributes: new { @class = "form-control", @data_val = "true", @data_val_required = "Customer field is required" })
        @Html.ValidationMessageFor(model => model.Customer, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product)

           @Html.DropDownList("Product", null, "Select a product", htmlAttributes: new { @class = "form-control", @data_val = "true", @data_val_required = "Product field is required" })
        @Html.ValidationMessageFor(model => model.Product, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Technician, "Technician")

        @Html.DropDownList("Technician", null, "Assign a technician", htmlAttributes: new { @class = "form-control"})
        @Html.ValidationMessageFor(model => model.Technician, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description)

        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateOpened)

        @Html.EditorFor(model => model.DateOpened, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DateOpened, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateClosed)

        @Html.EditorFor(model => model.DateClosed, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DateClosed, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
        @Html.ActionLink("Cancel", "List", null, new { @class = "btn btn-primary" })
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
