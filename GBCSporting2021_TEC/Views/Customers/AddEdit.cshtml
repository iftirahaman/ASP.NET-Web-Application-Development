@model GBCSporting2021_TEC.Models.Customer

@{
    string currentAction = ViewContext.RouteData.Values["action"].ToString();
    ViewBag.Title = currentAction + " Customer";
}

<h2 class="my-3 my-md-4">@currentAction Customer</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    if (currentAction == "Edit") {
        @Html.HiddenFor(model => model.Id)
    }

    <div class="form-group">
        @Html.LabelFor(model => model.Firstname)
        @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Lastname)

        @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address)

        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City)

        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State)

        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PostalCode)            
        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class="form-control w-100" } })
        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <ul class="nav">
            <li class="nav-item">@Html.LabelFor(model => model.Country, "Country")</li>
            <li class="nav-item ml-5">@Html.ActionLink("Add", "Add", "Countries", null, new { @class = "nav-item" })</li>
        </ul>
        @Html.DropDownList("Country", null, "Select a country", htmlAttributes: new { @class = "form-control", @data_val = "true", @data_val_required = "Country field is required" })
        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email)
        @Html.EditorFor(model => model.Email, new {htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone)    
        @Html.EditorFor(model => model.Phone, new {htmlAttributes = new { @class = "form-control" }})
        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
        @Html.ActionLink("Cancel", "List", null, new { @class = "btn btn-primary" })
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
